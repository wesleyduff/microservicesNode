apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  namespace: testharness
  labels:
    app: expressproxy-svc
  name: expressproxy-svc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: expressproxy-svc
  template:
    metadata:
      labels:
        app: expressproxy-svc
    spec:
      containers:
      - name: expressproxy-svc
        image: localsvc:v1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
      restartPolicy: Always
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  namespace: testharness
  labels:
    app: expressproxy-ui
  name: expressproxy-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: expressproxy-ui
  template:
    metadata:
      labels:
        app: expressproxy-ui
    spec:
      containers:
      - name: expressproxy-uis
        image: localui:v1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  namespace: testharness
  name: expressproxy-ui
  labels:
    app: expressproxy-ui
spec:
  ports:
  - port: 3000
    targetPort: 3000
  selector:
    app: expressproxy-ui
---
apiVersion: v1
kind: Service
metadata:
  namespace: testharness
  labels:
    app: expressproxy-svc
  name: expressproxy-svc
spec:
  selector:
    app: expressproxy-svc
  ports:
  - port: 8080
    targetPort: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: testharness
  name: expressproxy-svc-ingress
  annotations:
    ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: expressproxy-svc
          servicePort: 8080
        path: /svc
      - backend:
          serviceName: expressproxy-ui
          servicePort: 3000
        path: /
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  namespace: testharness
  labels:
    run: raven-svc
  name: raven-svc
spec:
  replicas: 1
  selector:
    matchLabels:
      run: raven-svc
  template:
    metadata:
      labels:
        run: raven-svc
    spec:
      containers:
      - name: raven-svc
        image: raven:vFin
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
      hostAliases:
        - ip: "10.98.167.224"
          hostnames:
          - "api.stats.com"
          - "api.ap.org"
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  namespace: testharness
  name: raven-svc
  labels:
    run: raven
spec:
  type: NodePort
  ports:
  - port: 3000
    name: web
    protocol: TCP
    targetPort: 3000
  selector:
    run: raven-svc