apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: api-gateway
spec:
  selector:
    matchLabels:
      app: api-gateway
      tier: backend
  replicas: 3
  template:
    metadata:
      labels:
        app: api-gateway
        tier: backend
    spec:
      containers:
        - name: api-gateway
          image: wesduff/microservices:v2
          ports:
            - containerPort: 8080
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  labels:
    app: api-gateway
    tier: backend
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 8080
  # Replace with the IP of your minikube node / master node
  externalIPs:
    - 192.168.99.100
  selector:
    app: api-gateway
    tier: backend
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    run: sports-svc
  name: sports-svc
spec:
  replicas: 1
  selector:
    matchLabels:
      run: sports-svc
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        run: sports-svc
    spec:
      containers:
      - name: sports-svc
        image: wesduff/sportsms:vMongo
        imagePullPolicy: Always
        ports:
        - containerPort: 3001
      dnsPolicy: ClusterFirst
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: sports-svc
  name: sports-svc
spec:
  selector:
    run: sports-svc
  ports:
  - port: 3001
    protocol: TCP
    targetPort: 3001
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    run: news-svc
  name: news-svc
spec:
  replicas: 1
  selector:
    matchLabels:
      run: news-svc
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        run: news-svc
    spec:
      containers:
      - name: news-svc
        image: wesduff/newsms:vPostgresSQL
        imagePullPolicy: Always
        ports:
        - containerPort: 3002
      dnsPolicy: ClusterFirst
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: news-svc
  name: news-svc
spec:
  selector:
    run: news-svc
  ports:
  - port: 3002
    protocol: TCP
    targetPort: 3002
  sessionAffinity: None
  type: ClusterIP
---
version: '3'
services:
  news-postgres:
    container_name: news-postgres
    build: .
    ports:
      - 3000:3000
    environment:
      POSTGRES_HOST: postgres:mysecretpassword@postgres:5432
      PORT: 3000

    depends_on:
      - postgres
    links:
      - postgres

  postgres:
    container_name: postgres
    restart: always
    image: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: news